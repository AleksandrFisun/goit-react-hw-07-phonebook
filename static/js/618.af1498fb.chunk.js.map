{"version":3,"file":"static/js/618.af1498fb.chunk.js","mappings":"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","sources":["components/phonebook/section/Section.styled.js","components/phonebook/section/Section.jsx","../node_modules/nanoid/index.browser.js","components/phonebook/formContact/FormContact.styled.js","components/phonebook/formContact/FormContact.jsx","components/phonebook/searchContact/SearchContact.style.js","components/phonebook/searchContact/SearchContact.jsx","components/phonebook/listContact/ListContact.styled.js","components/phonebook/itemContact/itemContact.styled.js","components/phonebook/itemContact/itemContact.jsx","components/phonebook/listContact/ListContact.jsx","components/phonebook/PhoneBook.jsx","pages/PhoneBook.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.section`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin: 10px auto;\n  padding-top: 10px;\n`;\n","import React from 'react';\nimport { Wrapper } from './Section.styled';\n\nexport const Section = ({ children }) => {\n  return <Wrapper>{children}</Wrapper>;\n};\n","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nexport const WrapperLabelInput = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Input = styled.input`\n  width: 300px;\n  height: 30px;\n  margin: 5px;\n  border-radius: 4px;\n  border: none;\n  background-color: white;\n`;\nexport const Button = styled.button`\n  text-decoration: none;\n  display: inline-block;\n  width: 220px;\n  height: 45px;\n  line-height: 45px;\n  border-radius: 45px;\n  margin: 20px 10px;\n  font-family: Montserrat, sans-serif;\n  font-size: 11px;\n  text-transform: uppercase;\n  text-align: center;\n  letter-spacing: 3px;\n  font-weight: 600;\n  color: rgb(82, 79, 78);\n  background: white;\n  box-shadow: rgba(0, 0, 0, 0.1) 0px 8px 15px;\n  transition: all 0.3s ease 0s;\n  border: none;\n  cursor: pointer;\n`;\n","import { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport { toast } from 'react-toastify';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact, getPhoneBookItems } from 'redux/contactsSlice';\nimport { Input, Button, Form, WrapperLabelInput } from './FormContact.styled';\n\nexport const FormContact = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const selector = useSelector(getPhoneBookItems);\n  const nameFilter = selector.filter(el => el.name === name.toLowerCase());\n\n  const dispatch = useDispatch();\n\n  let contactNameId = nanoid();\n  let contactNumberId = nanoid();\n\n  const onChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        break;\n    }\n  };\n  const onSubmit = e => {\n    e.preventDefault();\n    if (nameFilter.length > 0) {\n      return toast.warn(\n        '💩 There is already a contact with that name. Correct the entered name!'\n      );\n    }\n    dispatch(addContact({ id: nanoid(), name, number }));\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={onSubmit}>\n      <h2>Phone Book</h2>\n      <WrapperLabelInput>\n        <label htmlFor={contactNameId}>Name</label>\n        <Input\n          onChange={onChange}\n          value={name}\n          type=\"text\"\n          name=\"name\"\n          id={contactNameId}\n          placeholder=\"Aleksandr\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </WrapperLabelInput>\n      <WrapperLabelInput>\n        <label htmlFor={contactNumberId}>Number</label>\n        <Input\n          onChange={onChange}\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          id={contactNumberId}\n          placeholder=\"+380956888227\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </WrapperLabelInput>\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n};\n","import styled from 'styled-components';\n\nexport const WrapperSearchContact = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: start;\n  align-items: flex-start;\n  margin: 10px auto;\n  padding: 10px;\n  max-width: 320px;\n`;\n\nexport const InputSearchContact = styled.input`\n  width: 300px;\n  height: 30px;\n  margin: 5px;\n  border-radius: 4px;\n  border: none;\n  background-color: white;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport { filterContacts, getPhoneBookFilter } from 'redux/contactsSlice';\nimport {\n  InputSearchContact,\n  WrapperSearchContact,\n} from './SearchContact.style';\n\nexport const SearchContact = () => {\n  const filter = useSelector(getPhoneBookFilter);\n  const dispatch = useDispatch();\n  const idSerachContact = nanoid();\n\n  return (\n    <>\n      <WrapperSearchContact>\n        <label htmlFor={idSerachContact}>Find contacts by name</label>\n        <InputSearchContact\n          onChange={e =>\n            dispatch(filterContacts(e.target.value.toLowerCase().trim()))\n          }\n          value={filter}\n          type=\"text\"\n          id={idSerachContact}\n          placeholder=\"Search contact\"\n        />\n      </WrapperSearchContact>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ListContactWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin: 10px auto;\n  padding: 10px;\n`;\nexport const List = styled.ul`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  list-style: none;\n`;\nexport const Item = styled.li`\n  display: flex;\n  justify-content: center;\n  min-width: 100px;\n  align-items: center;\n`;\nexport const Span = styled.span`\n  font-size: 20px;\n`;\nexport const ButtonDel = styled.button`\n  text-decoration: none;\n  display: inline-block;\n  width: 100px;\n  height: 45px;\n  line-height: 45px;\n  border-radius: 45px;\n  margin: 10px 20px;\n  font-family: Montserrat, sans-serif;\n  font-size: 11px;\n  text-transform: uppercase;\n  text-align: center;\n  letter-spacing: 3px;\n  font-weight: 600;\n  color: rgb(82, 79, 78);\n  background: white;\n  box-shadow: rgba(0, 0, 0, 0.1) 0px 8px 15px;\n  transition: all 0.3s ease 0s;\n  border: none;\n  cursor: pointer;\n`;\n","import styled from 'styled-components';\n\nexport const ListContactWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin: 10px auto;\n  padding: 10px;\n`;\nexport const List = styled.ul`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  list-style: none;\n`;\nexport const Item = styled.li`\n  display: flex;\n  justify-content: center;\n  min-width: 100px;\n  align-items: center;\n`;\nexport const Span = styled.span`\n  font-size: 20px;\n`;\nexport const ButtonDel = styled.button`\n  text-decoration: none;\n  display: inline-block;\n  width: 100px;\n  height: 45px;\n  line-height: 45px;\n  border-radius: 45px;\n  margin: 10px 20px;\n  font-family: Montserrat, sans-serif;\n  font-size: 11px;\n  text-transform: uppercase;\n  text-align: center;\n  letter-spacing: 3px;\n  font-weight: 600;\n  color: rgb(82, 79, 78);\n  background: white;\n  box-shadow: rgba(0, 0, 0, 0.1) 0px 8px 15px;\n  transition: all 0.3s ease 0s;\n  border: none;\n  cursor: pointer;\n`;\n","import { Item, Span, ButtonDel } from './itemContact.styled';\nimport PropTypes from 'prop-types';\n\nimport { deleteContact } from 'redux/contactsSlice';\nimport { useDispatch } from 'react-redux';\nconst ItemContact = ({ name, number, id }) => {\n  const dispatch = useDispatch();\n  return (\n    <>\n      <Item id={id}>\n        <Span>{name}</Span>\n      </Item>\n      <Item>\n        <Span>{number}</Span>\n      </Item>\n      <Item>\n        <div>\n          <ButtonDel onClick={() => dispatch(deleteContact(id))}>\n            Delete\n          </ButtonDel>\n        </div>\n      </Item>\n    </>\n  );\n};\nexport default ItemContact;\nItemContact.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport { ListContactWrapper, List } from './ListContact.styled';\nimport { useSelector } from 'react-redux';\nimport ItemContact from 'components/phonebook/itemContact/itemContact';\n\nexport const ListContact = () => {\n  const contacts = useSelector(state => state.phonebook.items);\n  const filter = useSelector(state => state.phonebook.filter.toLowerCase());\n  const filteredContacts = contacts.filter(contact =>\n    contact.name ? contact.name.toLowerCase().includes(filter) : contacts\n  );\n\n  return (\n    <ListContactWrapper>\n      <h2>List Contacts</h2>\n      {contacts.length <= 0 && <p>No contacts</p>}\n      {contacts.length > 0 &&\n        filteredContacts.map(({ id, name, number }) => {\n          return (\n            <List key={id}>\n              <ItemContact id={id} name={name} number={number} />\n            </List>\n          );\n        })}\n    </ListContactWrapper>\n  );\n};\n","import { Section } from './section/Section';\nimport { FormContact } from './formContact/FormContact';\nimport { SearchContact } from './searchContact/SearchContact';\nimport { ListContact } from './listContact/ListContact';\n\nconst PhoneBook = () => {\n  return (\n    <>\n      <Section>\n        <FormContact />\n        <SearchContact />\n        <ListContact />\n      </Section>\n    </>\n  );\n};\nexport default PhoneBook;\n","import PhoneBook from 'components/phonebook/PhoneBook';\n\nconst Contacts = () => {\n  return (\n    <div>\n      <PhoneBook />\n    </div>\n  );\n};\nexport default Contacts;\n"],"names":["Wrapper","styled","Section","children","nanoid","size","id","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase","Form","WrapperLabelInput","Input","Button","FormContact","useState","name","setName","number","setNumber","nameFilter","useSelector","getPhoneBookItems","filter","el","toLowerCase","dispatch","useDispatch","contactNameId","contactNumberId","onChange","e","currentTarget","value","onSubmit","preventDefault","length","toast","addContact","htmlFor","type","placeholder","pattern","title","required","WrapperSearchContact","InputSearchContact","SearchContact","getPhoneBookFilter","idSerachContact","filterContacts","target","trim","ListContactWrapper","List","Item","Span","ButtonDel","onClick","deleteContact","ListContact","contacts","state","phonebook","items","filteredContacts","contact","includes","map"],"sourceRoot":""}