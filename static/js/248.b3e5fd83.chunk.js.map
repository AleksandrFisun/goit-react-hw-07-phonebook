{"version":3,"file":"static/js/248.b3e5fd83.chunk.js","mappings":"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","sources":["components/phonebook/section/Section.styled.js","components/phonebook/section/Section.jsx","../node_modules/nanoid/index.browser.js","components/phonebook/formContact/FormContact.styled.js","components/phonebook/formContact/FormContact.jsx","components/phonebook/searchContact/SearchContact.style.js","components/phonebook/searchContact/SearchContact.jsx","components/phonebook/itemContact/itemContact.styled.js","loader/Spinner.jsx","components/phonebook/itemContact/itemContact.jsx","components/phonebook/listContact/ListContact.styled.js","components/phonebook/listContact/ListContact.jsx","components/phonebook/PhoneBook.jsx","pages/PhoneBook.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.section`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin: 10px auto;\n  padding-top: 10px;\n`;\n","import React from 'react';\nimport { Wrapper } from './Section.styled';\n\nexport const Section = ({ children }) => {\n  return <Wrapper>{children}</Wrapper>;\n};\n","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nexport const WrapperLabelInput = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Input = styled.input`\n  width: 300px;\n  height: 30px;\n  margin: 5px;\n  border-radius: 4px;\n  border: none;\n  background-color: white;\n`;\nexport const Button = styled.button`\n  text-decoration: none;\n  display: inline-block;\n  width: 220px;\n  height: 45px;\n  line-height: 45px;\n  border-radius: 45px;\n  margin: 20px 10px;\n  font-family: Montserrat, sans-serif;\n  font-size: 11px;\n  text-transform: uppercase;\n  text-align: center;\n  letter-spacing: 3px;\n  font-weight: 600;\n  color: rgb(82, 79, 78);\n  background: white;\n  box-shadow: rgba(0, 0, 0, 0.1) 0px 8px 15px;\n  transition: all 0.3s ease 0s;\n  border: none;\n  cursor: pointer;\n`;\n","import { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport { toast } from 'react-toastify';\nimport {\n  useGetPhoneBookQuery,\n  useAddPhoneBookMutation,\n} from 'redux/services/contactsSlice';\nimport { Input, Button, Form, WrapperLabelInput } from './FormContact.styled';\n\nexport const FormContact = () => {\n  const [name, setName] = useState('');\n  const [phoneNumber, setPhoneNumber] = useState('');\n\n  const { data } = useGetPhoneBookQuery();\n  const [addPhoneBook] = useAddPhoneBookMutation();\n  const filteredContacts = data\n    ? data.filter(contact =>\n        contact.name\n          ? contact.name.toLowerCase().includes(name.toLowerCase())\n          : data\n      )\n    : data;\n\n  let contactNameId = nanoid();\n  let contactNumberId = nanoid();\n\n  const onChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setPhoneNumber(value);\n        break;\n      default:\n    }\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    if (filteredContacts.length > 0) {\n      return toast.warn(\n        '💩 There is already a contact with that name. Correct the entered name!'\n      );\n    }\n    addPhoneBook({ name, phoneNumber });\n    toast.success(`💪 Contact (${name}) added successfully !`);\n    setName('');\n    setPhoneNumber('');\n  };\n\n  return (\n    <Form onSubmit={onSubmit}>\n      <h2>Phone Book</h2>\n      <WrapperLabelInput>\n        <label htmlFor={contactNameId}>Name</label>\n        <Input\n          onChange={onChange}\n          value={name}\n          type=\"text\"\n          name=\"name\"\n          id={contactNameId}\n          placeholder=\"Aleksandr\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </WrapperLabelInput>\n      <WrapperLabelInput>\n        <label htmlFor={contactNumberId}>Number</label>\n        <Input\n          onChange={onChange}\n          value={phoneNumber}\n          type=\"tel\"\n          name=\"number\"\n          id={contactNumberId}\n          placeholder=\"+380956888227\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </WrapperLabelInput>\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n};\n","import styled from 'styled-components';\n\nexport const WrapperSearchContact = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: start;\n  align-items: flex-start;\n  margin: 10px auto;\n  padding: 10px;\n  max-width: 320px;\n`;\n\nexport const InputSearchContact = styled.input`\n  width: 300px;\n  height: 30px;\n  margin: 5px;\n  border-radius: 4px;\n  border: none;\n  background-color: white;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport { filterContacts } from 'redux/services/contactsSlice';\nimport {\n  InputSearchContact,\n  WrapperSearchContact,\n} from './SearchContact.style';\n\nexport const SearchContact = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(state => state.phoneBookFilter.filter);\n  const idSerachContact = nanoid();\n\n  return (\n    <>\n      <WrapperSearchContact>\n        <label htmlFor={idSerachContact}>Find contacts by name</label>\n        <InputSearchContact\n          onChange={e =>\n            dispatch(filterContacts(e.target.value.toLowerCase().trim()))\n          }\n          value={filter}\n          type=\"text\"\n          id={idSerachContact}\n          placeholder=\"Search contact\"\n        />\n      </WrapperSearchContact>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ListContactWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin: 10px auto;\n  padding: 10px;\n`;\nexport const List = styled.ul`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  list-style: none;\n`;\nexport const Item = styled.li`\n  display: flex;\n  justify-content: center;\n  min-width: 100px;\n  align-items: center;\n`;\nexport const Span = styled.span`\n  font-size: 20px;\n`;\nexport const ButtonDel = styled.button`\n  text-decoration: none;\n  display: inline-block;\n  width: 100px;\n  height: 45px;\n  line-height: 45px;\n  border-radius: 45px;\n  margin: 10px 20px;\n  font-family: Montserrat, sans-serif;\n  font-size: 11px;\n  text-transform: uppercase;\n  text-align: center;\n  letter-spacing: 3px;\n  font-weight: 600;\n  color: rgb(82, 79, 78);\n  background: rgb(100%, 100%, 100%, 1);\n  box-shadow: rgba(0, 0, 0, 0.1) 0px 8px 15px;\n  transition: all 0.3s ease 0s;\n  border: none;\n  cursor: pointer;\n  &:disabled {\n    background: rgb(58%, 58%, 58%, 1);\n  }\n`;\nexport const ButtonWrapper = styled.span`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n`;\n","import { ColorRing } from 'react-loader-spinner';\nconst SpinnerSmall = () => {\n  return (\n    <>\n      <ColorRing\n        visible={true}\n        height=\"12\"\n        width=\"12\"\n        ariaLabel=\"blocks-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"blocks-wrapper\"\n        colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n      />\n    </>\n  );\n};\nconst SpinnerBig = () => {\n  return (\n    <>\n      <ColorRing\n        visible={true}\n        height=\"30\"\n        width=\"30\"\n        ariaLabel=\"blocks-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"blocks-wrapper\"\n        colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n      />\n    </>\n  );\n};\nexport default (SpinnerSmall, SpinnerBig);\n","import { Item, Span, ButtonDel, ButtonWrapper } from './itemContact.styled';\nimport { useDeletePhoneBookMutation } from 'redux/services/contactsSlice';\nimport SpinnerSmall from 'loader/Spinner';\nimport PropTypes from 'prop-types';\n\nconst ItemContact = ({ name, number, id }) => {\n  const [deletePhoneBook, { isLoading }] = useDeletePhoneBookMutation();\n\n  return (\n    <>\n      <Item id={id}>\n        <Span>{name}</Span>\n      </Item>\n      <Item>\n        <Span>{number}</Span>\n      </Item>\n      <Item>\n        <div>\n          <ButtonDel onClick={() => deletePhoneBook(id)} disabled={isLoading}>\n            <ButtonWrapper>\n              {isLoading && <SpinnerSmall />}\n              <span>Delete</span>\n            </ButtonWrapper>\n          </ButtonDel>\n        </div>\n      </Item>\n    </>\n  );\n};\nexport default ItemContact;\nItemContact.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const ListContactWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin: 10px auto;\n  padding: 10px;\n`;\nexport const Title = styled.h2`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\nexport const SpinnerWrapper = styled.span`\n  width: 32px;\n  height: 32px;\n`;\nexport const List = styled.ul`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  list-style: none;\n`;\nexport const Item = styled.li`\n  display: flex;\n  justify-content: center;\n  min-width: 100px;\n  align-items: center;\n`;\nexport const Span = styled.span`\n  font-size: 20px;\n`;\nexport const ButtonDel = styled.button`\n  text-decoration: none;\n  display: inline-block;\n  width: 100px;\n  height: 45px;\n  line-height: 45px;\n  border-radius: 45px;\n  margin: 10px 20px;\n  font-family: Montserrat, sans-serif;\n  font-size: 11px;\n  text-transform: uppercase;\n  text-align: center;\n  letter-spacing: 3px;\n  font-weight: 600;\n  color: rgb(82, 79, 78);\n  background: white;\n  box-shadow: rgba(0, 0, 0, 0.1) 0px 8px 15px;\n  transition: all 0.3s ease 0s;\n  border: none;\n  cursor: pointer;\n`;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useGetPhoneBookQuery } from 'redux/services/contactsSlice';\nimport ItemContact from 'components/phonebook/itemContact/itemContact';\nimport SpinnerBig from 'loader/Spinner';\nimport {\n  ListContactWrapper,\n  List,\n  Title,\n  SpinnerWrapper,\n} from './ListContact.styled';\n\nexport const ListContact = () => {\n  const { data, isFetching } = useGetPhoneBookQuery();\n\n  const onFilter = useSelector(state => state.phoneBookFilter.filter);\n  const filteredContacts = data\n    ? data.filter(contact =>\n        contact.name ? contact.name.toLowerCase().includes(onFilter) : data\n      )\n    : data;\n\n  return (\n    <ListContactWrapper>\n      <Title>\n        <span>List Contacts</span>\n        <SpinnerWrapper>{isFetching && <SpinnerBig />}</SpinnerWrapper>\n      </Title>\n      {filteredContacts &&\n        filteredContacts.map(({ id, name, phoneNumber }) => {\n          return (\n            <List key={id}>\n              <ItemContact id={id} name={name} number={phoneNumber} />\n            </List>\n          );\n        })}\n    </ListContactWrapper>\n  );\n};\n","import { Section } from './section/Section';\nimport { FormContact } from './formContact/FormContact';\nimport { SearchContact } from './searchContact/SearchContact';\nimport { ListContact } from './listContact/ListContact';\n\nconst PhoneBook = () => {\n  return (\n    <>\n      <Section>\n        <FormContact />\n        <SearchContact />\n        <ListContact />\n      </Section>\n    </>\n  );\n};\nexport default PhoneBook;\n","import PhoneBook from 'components/phonebook/PhoneBook';\n\nconst Contacts = () => {\n  return (\n    <div>\n      <PhoneBook />\n    </div>\n  );\n};\nexport default Contacts;\n"],"names":["Wrapper","styled","Section","children","nanoid","size","id","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase","Form","WrapperLabelInput","Input","Button","FormContact","useState","name","setName","phoneNumber","setPhoneNumber","data","useGetPhoneBookQuery","useAddPhoneBookMutation","addPhoneBook","filteredContacts","filter","contact","toLowerCase","includes","contactNameId","contactNumberId","onChange","e","currentTarget","value","onSubmit","preventDefault","length","toast","htmlFor","type","placeholder","pattern","title","required","WrapperSearchContact","InputSearchContact","SearchContact","dispatch","useDispatch","useSelector","state","phoneBookFilter","idSerachContact","filterContacts","target","trim","Item","Span","ButtonDel","ButtonWrapper","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","number","useDeletePhoneBookMutation","deletePhoneBook","isLoading","onClick","disabled","Spinner","ListContactWrapper","Title","SpinnerWrapper","List","ListContact","isFetching","onFilter","map"],"sourceRoot":""}